__d(function (global, require, module, exports, _dependencyMap) {
    module.exports = function decycle(object) {
        var objects = [],
            paths = [];
        return function derez(value, path) {
            var i, name, nu;

            if (typeof value === 'object' && value !== null && !(value instanceof Boolean) && !(value instanceof Date) && !(value instanceof Number) && !(value instanceof RegExp) && !(value instanceof String)) {
                for (i = 0; i < objects.length; i += 1) {
                    if (objects[i] === value) {
                        return {
                            $ref: paths[i]
                        };
                    }
                }

                objects.push(value);
                paths.push(path);

                if (Object.prototype.toString.apply(value) === '[object Array]') {
                    nu = [];

                    for (i = 0; i < value.length; i += 1) {
                        nu[i] = derez(value[i], path + '[' + i + ']');
                    }
                } else {
                    nu = {};

                    for (name in value) {
                        if (Object.prototype.hasOwnProperty.call(value, name)) {
                            nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');
                        }
                    }
                }

                return nu;
            }

            return value;
        }(object, '$');
    };
});